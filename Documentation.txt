GIT - Distributed version control system

1. Free
2. Open Source
3. Super Fast
4. Scalable
5. Cheap Branching / Merging

Create a Directory:  mkdir Demo
goto the directory:  cd Demo
to create a repository : git init dummy

unix/linux command to add content to any file: creates a file if it does not exists

    echo content > filename

git status : gives the status of the working staging area
git add file1.txt : adds the file to staging

To append : echo content >> filename
g


trying append
To commit a change: git commit -m message to commit
You can directly commit the changes without adding the chnage to staging area as well
commit -a -m "message"  to commit all the uncommitted changes
It is always best practice to stage your changes before commiting. Only do direct commit when you know what you are doing.


git status to check the status of the working repository
git ls-files to list all the files

to remove a file- rm filename  --> to remove file in staging not in directory
to remove a file- git rm filename --> to remove file in both staging and directory
even removed we have to add the removal changes in staging to get it reflect


To rename a file - git mv filename newfilename

To ignore files from git tracking add them in .gitignore file. We should create gitignore file in the root directory and then add the files there and add to staging and commit.

To remove a file only from staging area - git rm filename --cached
To get short status - git status -s
git diff --staged - To complare chnages between staging and committed >> Documentation.txt

git diff - To compare changes between working directory and staging area

To quit press Q
To see the commit log -- git log
To show commit logs with one line description -- git log --oneline 
To show commit logs with one line description in reverse order -- git log --oneline --reverse 
To get help use -h
To show the difference of change in one specific commit -- git show unique.no / head~no.of.steps 
To see one particular commit version of the file -- git show unique.no / head~no.of.steps:filename
To show all the directories and files in a commit -- git ls-tree head~1/no.steps
To find the git version --> git --version
To restore the changes from staging area --> git restore --staged filename
To restore changes in local --> git restore filename
To clean all directories and files --> git clean -fd
To restore a deleted file, we can restore the previous commit using --> git restore --source = head~1 filename
To create a branch --> git branch -m branchname
To push the changes to repository -- > git push -u origin branchname

** To add the repository from git to pycharm, do --> create a project and click VCS -> Get from Version Control --> select the repository you want.
